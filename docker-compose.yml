version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: project_postgres
    environment:
      POSTGRES_USER: charles
      POSTGRES_PASSWORD: 0616
      POSTGRES_DB: shop_backend_go 
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - project_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U charles -d shop_backend_go"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Go API Application
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: project_api
    environment:
      DB_HOST: postgres
      DB_USER: charles
      DB_PASSWORD: 0616
      DB_NAME: shop_backend_go
      DB_PORT: 5432
      JWT_SECRET: f16c0e72-6b1f-4932-bfa0-468e7a3ec499
      PORT: 8080
      RUN_SEEDER: "true"
    ports:
      - "8080:8080"
    volumes:
      - ./static/uploads:/root/static/uploads
      # Removed: ./.env:/root/.env
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - project_network
    restart: unless-stopped

  # Optional: pgAdmin for database management
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: project_pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - project_network
    profiles:
      - dev

volumes:
  postgres_data:

networks:
  project_network:
    driver: bridge